# This file reads the systemd journal.
# It automatically drops useless messages and fields (see the filter section).
# The journald plugin is a third party plugin that must be installed manually.
input {
	journald {
		lowercase => true
		seekto => "head"
		thisboot => true
		type => [ "systemd" ]
		sincedb_write_interval => 2
	}
}
filter {
	# General stuff
	if "systemd" in [type] {
		mutate {
			remove_field => [ "_boot_id", "_cap_effective", "_cmdline", "_comm", "_hostname", "_machine_id", "_source_monotonic_timestamp", "_source_realtime_timestamp", "syslog_pid", "_systemd_cgroup", "_type", "code_file", "_systemd_owner_uid", "_systemd_session", "code_function", "code_line", "cursor", "kernel_usec", "syslog_facility", "syslog_identifier", "userspace_usec" ]
			strip => [ "message" ]
			rename => { "_systemd_slice" => "slice" }
			rename => { "_uid" => "uid" }
			rename => { "_gid" => "gid" }
			rename => { "_pid" => "pid" }
			rename => { "_exe" => "exe" }
			rename => { "_systemd_unit" => "unit" }
		}
		# Drop internal journald messages
		if [_transport] == "driver" {
			drop {}
		}
		# Drop audit messages
		if [_transport] == "audit" {
			drop {}
		}
		# Normalize kernel messages
		if [_transport] == "kernel" {
			mutate {
				remove_field => [ "_transport" ]
				replace => [ "type", "kernel" ]
			}
		}
		# Process systemd messages
		if [_transport] == "journal" {
			mutate {
				remove_field => [ "message_id", "_transport", "_audit_loginuid", "_audit_session" ]
			}
		}
		if [_transport] == "syslog" {
			mutate {
				remove_field => [ "_transport", "_audit_loginuid", "_audit_session", "_comm" ]
			}
		}
		# Process stdout of processes
		if [_transport] == "stdout" {
			mutate {
				remove_field => [ "_transport" ]
			}
		}
	}
}

